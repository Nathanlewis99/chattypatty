services:
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev          # <-- use the dev Dockerfile
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db                         # <-- entrypoint uses these for pg_isready
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: ""
      DB_NAME: postgres
      DATABASE_URL: postgresql+asyncpg://postgres:@db:5432/postgres
    volumes:
      - ./backend:/app
      - backend_data:/app/data
    ports:
      - "8001:8000"
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev          # <-- use the dev Dockerfile
    depends_on:
      - backend
    volumes:
      - ./frontend:/app                   # live-reload source
      - /app/node_modules                 # keep node_modules inside container
    ports:
      - "3000:3000"
    restart: unless-stopped

volumes:
  db_data:
  backend_data:
